-- =====================================================
-- VERIFICACI√ìN POST-ACTUALIZACI√ìN - TRATO
-- =====================================================
-- Ejecuta este script DESPU√âS de hacer la actualizaci√≥n para confirmar que todo est√© bien

-- =====================================================
-- 1. VERIFICAR TABLAS CR√çTICAS
-- =====================================================

SELECT 
  'üîç VERIFICACI√ìN DE TABLAS' as status,
  CASE 
    WHEN COUNT(*) >= 4 THEN '‚úÖ TODAS LAS TABLAS PRINCIPALES EXISTEN'
    ELSE '‚ùå FALTAN TABLAS CR√çTICAS'
  END as result,
  STRING_AGG(table_name, ', ') as tables_found
FROM information_schema.tables 
WHERE table_schema = 'public' 
  AND table_name IN ('users', 'sellers', 'products', 'daily_products');

-- =====================================================
-- 2. VERIFICAR STORAGE BUCKETS
-- =====================================================

SELECT 
  'üîç VERIFICACI√ìN DE STORAGE' as status,
  CASE 
    WHEN COUNT(*) = 3 THEN '‚úÖ TODOS LOS BUCKETS EXISTEN'
    ELSE '‚ùå FALTAN BUCKETS DE STORAGE'
  END as result,
  STRING_AGG(id, ', ') as buckets_found
FROM storage.buckets 
WHERE id IN ('products', 'avatars', 'business-logos');

-- =====================================================
-- 3. VERIFICAR TABLA DAILY_PRODUCTS (LA M√ÅS IMPORTANTE)
-- =====================================================

SELECT 
  'üîç VERIFICACI√ìN DAILY_PRODUCTS' as status,
  CASE 
    WHEN COUNT(*) >= 7 THEN '‚úÖ TABLA DAILY_PRODUCTS CORRECTA'
    ELSE '‚ùå TABLA DAILY_PRODUCTS INCOMPLETA'
  END as result,
  COUNT(*) || ' columnas encontradas' as details
FROM information_schema.columns 
WHERE table_schema = 'public' 
  AND table_name = 'daily_products';

-- =====================================================
-- 4. VERIFICAR POL√çTICAS DE SEGURIDAD
-- =====================================================

SELECT 
  'üîç VERIFICACI√ìN POL√çTICAS RLS' as status,
  CASE 
    WHEN COUNT(*) >= 15 THEN '‚úÖ POL√çTICAS RLS CONFIGURADAS'
    ELSE '‚ùå FALTAN POL√çTICAS RLS'
  END as result,
  COUNT(*) || ' pol√≠ticas encontradas' as details
FROM pg_policies 
WHERE schemaname = 'public' 
  AND tablename IN ('users', 'sellers', 'products', 'daily_products');

-- =====================================================
-- 5. VERIFICAR POL√çTICAS DE STORAGE
-- =====================================================

SELECT 
  'üîç VERIFICACI√ìN STORAGE POLICIES' as status,
  CASE 
    WHEN COUNT(*) >= 8 THEN '‚úÖ POL√çTICAS DE STORAGE OK'
    ELSE '‚ùå FALTAN POL√çTICAS DE STORAGE'
  END as result,
  COUNT(*) || ' pol√≠ticas de storage' as details
FROM pg_policies 
WHERE schemaname = 'storage' 
  AND tablename = 'objects'
  AND (policyname LIKE '%product%' OR policyname LIKE '%avatar%' OR policyname LIKE '%business%');

-- =====================================================
-- 6. VERIFICAR FUNCIONES CR√çTICAS
-- =====================================================

SELECT 
  'üîç VERIFICACI√ìN FUNCIONES' as status,
  CASE 
    WHEN COUNT(*) >= 1 THEN '‚úÖ FUNCIONES CREADAS'
    ELSE '‚ùå FALTAN FUNCIONES'
  END as result,
  STRING_AGG(routine_name, ', ') as functions_found
FROM information_schema.routines 
WHERE routine_schema = 'public' 
  AND routine_name IN ('update_updated_at_column', 'cleanup_expired_daily_products');

-- =====================================================
-- 7. PRUEBA DE INSERCI√ìN (OPCIONAL)
-- =====================================================

-- Comenta/descomenta esta secci√≥n si quieres probar una inserci√≥n
/*
-- Prueba insertar un usuario de ejemplo (se eliminar√° despu√©s)
INSERT INTO public.users (id, email, name, role) VALUES 
  ('00000000-0000-0000-0000-000000000999', 'test@ejemplo.com', 'Usuario Prueba', 'comprador');

-- Verificar que se insert√≥
SELECT 
  'üîç PRUEBA DE INSERCI√ìN' as status,
  CASE 
    WHEN COUNT(*) > 0 THEN '‚úÖ INSERCI√ìN FUNCIONA'
    ELSE '‚ùå INSERCI√ìN FALLA'
  END as result
FROM public.users 
WHERE email = 'test@ejemplo.com';

-- Eliminar usuario de prueba
DELETE FROM public.users WHERE email = 'test@ejemplo.com';
*/

-- =====================================================
-- RESULTADO FINAL
-- =====================================================

SELECT 'üéØ RESULTADO FINAL' as final_check;

WITH verification_summary AS (
  SELECT 
    (SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public' AND table_name IN ('users', 'sellers', 'products', 'daily_products')) >= 4 as tables_ok,
    (SELECT COUNT(*) FROM storage.buckets WHERE id IN ('products', 'avatars', 'business-logos')) = 3 as buckets_ok,
    (SELECT COUNT(*) FROM information_schema.columns WHERE table_schema = 'public' AND table_name = 'daily_products') >= 7 as daily_products_ok,
    (SELECT COUNT(*) FROM pg_policies WHERE schemaname = 'public' AND tablename IN ('users', 'sellers', 'products', 'daily_products')) >= 15 as policies_ok
)
SELECT 
  CASE 
    WHEN tables_ok AND buckets_ok AND daily_products_ok AND policies_ok
    THEN 'üéâ ¬°ACTUALIZACI√ìN COMPLETADA EXITOSAMENTE! 
    
Tu sistema de productos est√° 100% listo para usar:
‚úÖ Base de datos actualizada
‚úÖ Storage configurado  
‚úÖ Pol√≠ticas de seguridad activas
‚úÖ Funcionalidades completas disponibles

PR√ìXIMO PASO: Recarga tu aplicaci√≥n (F5) y prueba crear un producto.'

    ELSE '‚ö†Ô∏è ACTUALIZACI√ìN INCOMPLETA - Revisar elementos faltantes:
' || 
    CASE WHEN NOT tables_ok THEN '‚ùå Faltan tablas principales
' ELSE '' END ||
    CASE WHEN NOT buckets_ok THEN '‚ùå Faltan storage buckets  
' ELSE '' END ||
    CASE WHEN NOT daily_products_ok THEN '‚ùå Tabla daily_products incompleta
' ELSE '' END ||
    CASE WHEN NOT policies_ok THEN '‚ùå Faltan pol√≠ticas de seguridad
' ELSE '' END ||
'
SOLUCI√ìN: Ejecutar nuevamente /database/fix_setup.sql completo.'

  END as final_result
FROM verification_summary;

-- =====================================================
-- INSTRUCCIONES POST-VERIFICACI√ìN
-- =====================================================

SELECT 'üìã SIGUIENTES PASOS:' as next_steps;

SELECT 
  '1. Si todo est√° ‚úÖ, recarga tu aplicaci√≥n con F5' as step_1
UNION ALL
SELECT 
  '2. Reg√≠strate como vendedor para probar el sistema' as step_2
UNION ALL
SELECT 
  '3. Crea tu primer producto normal con imagen' as step_3  
UNION ALL
SELECT 
  '4. Crea un producto del d√≠a para probar auto-eliminaci√≥n' as step_4
UNION ALL
SELECT 
  '5. ¬°Disfruta tu sistema de gesti√≥n de productos!' as step_5;

SELECT '‚ú® ¬°TRATO est√° listo para conquistar el mercado local de Gual√°n!' as celebration;