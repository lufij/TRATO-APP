-- ============================================================================
-- TRATO - Correcci√≥n Simple Solo para price_per_unit
-- ============================================================================
-- Este script agrega √öNICAMENTE la columna price_per_unit que est√° faltando
-- SIN triggers ni funciones complicadas para evitar errores de sintaxis
-- ============================================================================

DO $$
BEGIN
    RAISE NOTICE 'üõ†Ô∏è CORRECCI√ìN SIMPLE PARA price_per_unit...';
    RAISE NOTICE '';
    RAISE NOTICE 'Este script agrega SOLO la columna price_per_unit que est√° faltando.';
    RAISE NOTICE '';
END $$;

-- ============================================================================
-- VERIFICAR Y AGREGAR COLUMNA price_per_unit
-- ============================================================================

DO $$
BEGIN
    RAISE NOTICE 'üîß VERIFICANDO Y AGREGANDO price_per_unit:';
    
    -- Verificar si la tabla order_items existe
    IF NOT EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'order_items') THEN
        RAISE NOTICE '   ‚ùå ERROR: Tabla order_items no existe';
        RAISE NOTICE '   üí° Ejecuta fix_order_items_columns_corrected.sql primero';
        RETURN;
    END IF;
    
    RAISE NOTICE '   ‚úÖ Tabla order_items existe';
    
    -- Verificar si la columna price_per_unit ya existe
    IF EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'order_items' AND column_name = 'price_per_unit') THEN
        RAISE NOTICE '   ‚úÖ Columna price_per_unit ya existe';
    ELSE
        RAISE NOTICE '   ‚ûï Agregando columna price_per_unit...';
        
        BEGIN
            ALTER TABLE order_items ADD COLUMN price_per_unit DECIMAL(10,2) NOT NULL DEFAULT 0;
            RAISE NOTICE '   ‚úÖ Columna price_per_unit agregada exitosamente';
        EXCEPTION WHEN OTHERS THEN
            RAISE NOTICE '   ‚ùå Error agregando price_per_unit: %', SQLERRM;
        END;
    END IF;
    
    -- Verificar si la columna total_price existe (tambi√©n necesaria)
    IF EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'order_items' AND column_name = 'total_price') THEN
        RAISE NOTICE '   ‚úÖ Columna total_price ya existe';
    ELSE
        RAISE NOTICE '   ‚ûï Agregando columna total_price...';
        
        BEGIN
            ALTER TABLE order_items ADD COLUMN total_price DECIMAL(10,2) NOT NULL DEFAULT 0;
            RAISE NOTICE '   ‚úÖ Columna total_price agregada exitosamente';
        EXCEPTION WHEN OTHERS THEN
            RAISE NOTICE '   ‚ùå Error agregando total_price: %', SQLERRM;
        END;
    END IF;
    
    -- Verificar si la columna quantity existe
    IF EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'order_items' AND column_name = 'quantity') THEN
        RAISE NOTICE '   ‚úÖ Columna quantity ya existe';
    ELSE
        RAISE NOTICE '   ‚ûï Agregando columna quantity...';
        
        BEGIN
            ALTER TABLE order_items ADD COLUMN quantity INTEGER NOT NULL DEFAULT 1;
            RAISE NOTICE '   ‚úÖ Columna quantity agregada exitosamente';
        EXCEPTION WHEN OTHERS THEN
            RAISE NOTICE '   ‚ùå Error agregando quantity: %', SQLERRM;
        END;
    END IF;
    
    RAISE NOTICE '';
END $$;

-- ============================================================================
-- TEST SIMPLE DE VERIFICACI√ìN
-- ============================================================================

DO $$
DECLARE
    price_per_unit_exists BOOLEAN := FALSE;
    total_price_exists BOOLEAN := FALSE;
    quantity_exists BOOLEAN := FALSE;
    test_works BOOLEAN := FALSE;
BEGIN
    RAISE NOTICE 'üîç TEST SIMPLE DE VERIFICACI√ìN:';
    
    -- Verificar columnas
    SELECT EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'order_items' AND column_name = 'price_per_unit') 
    INTO price_per_unit_exists;
    
    SELECT EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'order_items' AND column_name = 'total_price') 
    INTO total_price_exists;
    
    SELECT EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'order_items' AND column_name = 'quantity') 
    INTO quantity_exists;
    
    -- Probar query que estaba fallando
    BEGIN
        PERFORM price_per_unit, total_price, quantity FROM order_items LIMIT 1;
        test_works := TRUE;
        RAISE NOTICE '   ‚úÖ Query SELECT con price_per_unit: FUNCIONA';
    EXCEPTION WHEN OTHERS THEN
        test_works := FALSE;
        RAISE NOTICE '   ‚ùå Query SELECT con price_per_unit: ERROR - %', SQLERRM;
    END;
    
    -- Mostrar resultados
    RAISE NOTICE '';
    RAISE NOTICE 'üìä RESULTADOS:';
    RAISE NOTICE '   price_per_unit: %', CASE WHEN price_per_unit_exists THEN '‚úÖ EXISTE' ELSE '‚ùå NO EXISTE' END;
    RAISE NOTICE '   total_price: %', CASE WHEN total_price_exists THEN '‚úÖ EXISTE' ELSE '‚ùå NO EXISTE' END;
    RAISE NOTICE '   quantity: %', CASE WHEN quantity_exists THEN '‚úÖ EXISTE' ELSE '‚ùå NO EXISTE' END;
    RAISE NOTICE '   Query funciona: %', CASE WHEN test_works THEN '‚úÖ S√ç' ELSE '‚ùå NO' END;
    
    IF price_per_unit_exists AND total_price_exists AND quantity_exists AND test_works THEN
        RAISE NOTICE '';
        RAISE NOTICE 'üéâ ¬°CORRECCI√ìN SIMPLE EXITOSA!';
        RAISE NOTICE '';
        RAISE NOTICE '‚úÖ El error "column order_items_1.price_per_unit does not exist" est√° solucionado';
        RAISE NOTICE 'üì± Recarga la aplicaci√≥n TRATO para confirmar';
    ELSE
        RAISE NOTICE '';
        RAISE NOTICE '‚ö†Ô∏è CORRECCI√ìN INCOMPLETA - ejecuta fix_order_items_columns_corrected.sql';
    END IF;
    
    RAISE NOTICE '';
    RAISE NOTICE 'üéØ CORRECCI√ìN SIMPLE COMPLETADA.';
    
END $$;