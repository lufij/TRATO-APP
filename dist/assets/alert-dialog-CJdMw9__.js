import{r as s,U as u,j as o,V as H,W as L,Y as k,G as A,_ as V,k as W,$ as Y,H as q,a0 as B,a1 as U,a2 as J,a3 as D,a4 as K,o as n,a5 as v}from"./index-BTyKdRD7.js";var x="AlertDialog",[Q,De]=W(x,[u]),i=u(),N=a=>{const{__scopeAlertDialog:e,...t}=a,r=i(e);return o.jsx(H,{...r,...t,modal:!0})};N.displayName=x;var X="AlertDialogTrigger",y=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(L,{...l,...r,ref:e})});y.displayName=X;var Z="AlertDialogPortal",R=a=>{const{__scopeAlertDialog:e,...t}=a,r=i(e);return o.jsx(k,{...r,...t})};R.displayName=Z;var ee="AlertDialogOverlay",_=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(K,{...l,...r,ref:e})});_.displayName=ee;var c="AlertDialogContent",[ae,te]=Q(c),j=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,children:r,...l}=a,g=i(t),p=s.useRef(null),G=A(e,p),f=s.useRef(null);return o.jsx(V,{contentName:c,titleName:h,docsSlug:"alert-dialog",children:o.jsx(ae,{scope:t,cancelRef:f,children:o.jsxs(Y,{role:"alertdialog",...g,...l,ref:G,onOpenAutoFocus:q(l.onOpenAutoFocus,d=>{var m;d.preventDefault(),(m=f.current)==null||m.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[o.jsx(B,{children:r}),o.jsx(re,{contentRef:p})]})})})});j.displayName=c;var h="AlertDialogTitle",b=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(U,{...l,...r,ref:e})});b.displayName=h;var w="AlertDialogDescription",E=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(J,{...l,...r,ref:e})});E.displayName=w;var oe="AlertDialogAction",C=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(D,{...l,...r,ref:e})});C.displayName=oe;var P="AlertDialogCancel",S=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,{cancelRef:l}=te(P,t),g=i(t),p=A(e,l);return o.jsx(D,{...g,...r,ref:p})});S.displayName=P;var re=({contentRef:a})=>{const e=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${w}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=a.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(e)},[e,a]),null},se=N,le=y,ie=R,T=_,O=j,$=C,M=S,I=b,F=E;const ve=se,xe=le,ne=ie,z=s.forwardRef(({className:a,...e},t)=>o.jsx(T,{className:n("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",a),...e,ref:t}));z.displayName=T.displayName;const ce=s.forwardRef(({className:a,description:e,...t},r)=>o.jsxs(ne,{children:[o.jsx(z,{}),o.jsxs(O,{ref:r,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",a),"aria-describedby":e?"alert-dialog-description":void 0,...t,children:[t.children,e&&o.jsx("div",{id:"alert-dialog-description",className:"sr-only",children:e})]})]}));ce.displayName=O.displayName;const de=({className:a,...e})=>o.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",a),...e});de.displayName="AlertDialogHeader";const pe=({className:a,...e})=>o.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",a),...e});pe.displayName="AlertDialogFooter";const ge=s.forwardRef(({className:a,...e},t)=>o.jsx(I,{ref:t,className:n("text-lg font-semibold",a),...e}));ge.displayName=I.displayName;const fe=s.forwardRef(({className:a,...e},t)=>o.jsx(F,{ref:t,className:n("text-sm text-muted-foreground",a),...e}));fe.displayName=F.displayName;const me=s.forwardRef(({className:a,...e},t)=>o.jsx($,{ref:t,className:n(v(),a),...e}));me.displayName=$.displayName;const ue=s.forwardRef(({className:a,...e},t)=>o.jsx(M,{ref:t,className:n(v({variant:"outline"}),"mt-2 sm:mt-0",a),...e}));ue.displayName=M.displayName;export{ve as A,xe as a,ce as b,de as c,ge as d,fe as e,pe as f,ue as g,me as h};
