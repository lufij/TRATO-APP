import{g as u,r as s,W as A,j as o,Y as G,_ as H,$ as q,G as D,a0 as W,k as Y,a1 as V,H as B,a2 as J,a3 as K,a4 as Q,a5 as v,a6 as U,o as n,a7 as y}from"./index-9d4LIYkQ.js";/**
 * @license lucide-react v0.487.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const X=[["path",{d:"M5 12h14",key:"1ays0h"}]],xe=u("minus",X);/**
 * @license lucide-react v0.487.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Z=[["circle",{cx:"11",cy:"11",r:"8",key:"4ej97u"}],["path",{d:"m21 21-4.3-4.3",key:"1qie3q"}]],Ne=u("search",Z);var x="AlertDialog",[ee,he]=Y(x,[A]),i=A(),N=a=>{const{__scopeAlertDialog:e,...t}=a,r=i(e);return o.jsx(G,{...r,...t,modal:!0})};N.displayName=x;var ae="AlertDialogTrigger",h=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(H,{...l,...r,ref:e})});h.displayName=ae;var te="AlertDialogPortal",_=a=>{const{__scopeAlertDialog:e,...t}=a,r=i(e);return o.jsx(q,{...r,...t})};_.displayName=te;var oe="AlertDialogOverlay",j=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(U,{...l,...r,ref:e})});j.displayName=oe;var c="AlertDialogContent",[re,se]=ee(c),R=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,children:r,...l}=a,g=i(t),p=s.useRef(null),z=D(e,p),f=s.useRef(null);return o.jsx(W,{contentName:c,titleName:b,docsSlug:"alert-dialog",children:o.jsx(re,{scope:t,cancelRef:f,children:o.jsxs(V,{role:"alertdialog",...g,...l,ref:z,onOpenAutoFocus:B(l.onOpenAutoFocus,d=>{var m;d.preventDefault(),(m=f.current)==null||m.focus({preventScroll:!0})}),onPointerDownOutside:d=>d.preventDefault(),onInteractOutside:d=>d.preventDefault(),children:[o.jsx(J,{children:r}),o.jsx(ie,{contentRef:p})]})})})});R.displayName=c;var b="AlertDialogTitle",w=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(K,{...l,...r,ref:e})});w.displayName=b;var E="AlertDialogDescription",C=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(Q,{...l,...r,ref:e})});C.displayName=E;var le="AlertDialogAction",S=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,l=i(t);return o.jsx(v,{...l,...r,ref:e})});S.displayName=le;var P="AlertDialogCancel",T=s.forwardRef((a,e)=>{const{__scopeAlertDialog:t,...r}=a,{cancelRef:l}=se(P,t),g=i(t),p=D(e,l);return o.jsx(v,{...g,...r,ref:p})});T.displayName=P;var ie=({contentRef:a})=>{const e=`\`${c}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${c}\` by passing a \`${E}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${c}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=a.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(e)},[e,a]),null},ne=N,ce=h,de=_,O=j,$=R,M=S,I=T,k=w,F=C;const _e=ne,je=ce,pe=de,L=s.forwardRef(({className:a,...e},t)=>o.jsx(O,{className:n("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",a),...e,ref:t}));L.displayName=O.displayName;const ge=s.forwardRef(({className:a,description:e,...t},r)=>o.jsxs(pe,{children:[o.jsx(L,{}),o.jsxs($,{ref:r,className:n("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",a),"aria-describedby":e?"alert-dialog-description":void 0,...t,children:[t.children,e&&o.jsx("div",{id:"alert-dialog-description",className:"sr-only",children:e})]})]}));ge.displayName=$.displayName;const fe=({className:a,...e})=>o.jsx("div",{className:n("flex flex-col space-y-2 text-center sm:text-left",a),...e});fe.displayName="AlertDialogHeader";const me=({className:a,...e})=>o.jsx("div",{className:n("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",a),...e});me.displayName="AlertDialogFooter";const ue=s.forwardRef(({className:a,...e},t)=>o.jsx(k,{ref:t,className:n("text-lg font-semibold",a),...e}));ue.displayName=k.displayName;const Ae=s.forwardRef(({className:a,...e},t)=>o.jsx(F,{ref:t,className:n("text-sm text-muted-foreground",a),...e}));Ae.displayName=F.displayName;const De=s.forwardRef(({className:a,...e},t)=>o.jsx(M,{ref:t,className:n(y(),a),...e}));De.displayName=M.displayName;const ve=s.forwardRef(({className:a,...e},t)=>o.jsx(I,{ref:t,className:n(y({variant:"outline"}),"mt-2 sm:mt-0",a),...e}));ve.displayName=I.displayName;export{_e as A,xe as M,Ne as S,je as a,ge as b,fe as c,ue as d,Ae as e,me as f,ve as g,De as h};
