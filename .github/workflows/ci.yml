name: CI & Deploy (Vite + Vercel)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci || npm i

      - name: Typecheck (non-blocking)
        run: npm run typecheck --if-present
        continue-on-error: true

      - name: Build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        run: |
          if [ -z "$VITE_SUPABASE_URL" ] || [ -z "$VITE_SUPABASE_ANON_KEY" ]; then
            echo "VITE_SUPABASE_URL / VITE_SUPABASE_ANON_KEY are missing in repo secrets. Set them to build against the real project." >&2
            exit 1
          fi
          npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy-vercel:
  if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Check Vercel secrets
        id: secrets_check
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          missing=false
          if [ -z "$VERCEL_TOKEN" ] || [ -z "$VERCEL_ORG_ID" ] || [ -z "$VERCEL_PROJECT_ID" ]; then
            missing=true
          fi
          echo "missing=$missing" >> $GITHUB_OUTPUT

      - name: Skip deploy (missing secrets)
        if: steps.secrets_check.outputs.missing == 'true'
        run: |
          echo "Vercel secrets missing. Define VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID in repo settings to enable deploy."

      - name: Install Vercel CLI
        if: steps.secrets_check.outputs.missing == 'false'
        run: npm i -g vercel@latest

      - name: Pull Vercel Environment Information
        if: steps.secrets_check.outputs.missing == 'false'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        id: deploy
        if: steps.secrets_check.outputs.missing == 'false'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          vercel deploy --prod dist --token=${{ secrets.VERCEL_TOKEN }} | tee deploy_url.txt
          echo "url=$(tail -n 1 deploy_url.txt)" >> $GITHUB_OUTPUT
