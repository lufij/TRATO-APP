// üîî ACTIVADOR DE NOTIFICACIONES - SOLUCI√ìN COMPLETA
// Ejecutar en la consola del navegador del dashboard de vendedor

console.log('üîî === ACTIVADOR DE NOTIFICACIONES COMPLETO ===');

async function activateNotifications() {
  console.log('üöÄ Iniciando activaci√≥n de notificaciones...');
  
  // Paso 1: Verificar soporte
  if (!('Notification' in window)) {
    console.log('‚ùå Este navegador no soporta notificaciones');
    return false;
  }
  
  // Paso 2: Verificar estado actual
  console.log('üìã Estado actual:', Notification.permission);
  
  // Paso 3: Solicitar permisos si es necesario
  if (Notification.permission === 'default') {
    console.log('üìù Solicitando permisos...');
    try {
      const permission = await Notification.requestPermission();
      console.log('‚úÖ Permisos actualizados a:', permission);
      
      if (permission !== 'granted') {
        console.log('‚ùå Permisos no concedidos. Instrucciones:');
        console.log('1. Busca el √≠cono de candado en la barra de direcciones');
        console.log('2. Clic en Notificaciones ‚Üí Permitir');
        console.log('3. Recarga la p√°gina');
        return false;
      }
    } catch (error) {
      console.log('‚ùå Error solicitando permisos:', error.message);
      return false;
    }
  }
  
  if (Notification.permission === 'denied') {
    console.log('üö´ Notificaciones bloqueadas. Para activar:');
    console.log('Chrome: Candado URL ‚Üí Notificaciones ‚Üí Permitir ‚Üí Recargar');
    console.log('Firefox: Escudo URL ‚Üí Permisos ‚Üí Notificaciones ‚Üí Permitir ‚Üí Recargar');
    return false;
  }
  
  // Paso 4: Test de notificaci√≥n
  if (Notification.permission === 'granted') {
    console.log('‚úÖ Permisos concedidos. Probando notificaci√≥n...');
    
    const testNotification = new Notification('üéâ ¬°Notificaciones Activas!', {
      body: 'Ahora recibir√°s alertas de nuevos pedidos',
      icon: '/favicon.ico',
      badge: '/favicon.ico',
      tag: 'activation-test'
    });
    
    testNotification.onclick = () => {
      console.log('üëÜ Notificaci√≥n clickeada');
      testNotification.close();
    };
    
    setTimeout(() => testNotification.close(), 5000);
  }
  
  // Paso 5: Activar sistema de sonido
  console.log('üîä Configurando sistema de sonido...');
  
  window.playNotificationSound = function() {
    try {
      const AudioContextClass = window.AudioContext || window.webkitAudioContext;
      const audioContext = new AudioContextClass();
      
      const playTone = (frequency, duration, delay = 0) => {
        setTimeout(() => {
          const oscillator = audioContext.createOscillator();
          const gainNode = audioContext.createGain();
          
          oscillator.connect(gainNode);
          gainNode.connect(audioContext.destination);
          
          oscillator.frequency.setValueAtTime(frequency, audioContext.currentTime);
          oscillator.type = 'sine';
          
          gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
          gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + duration);
          
          oscillator.start(audioContext.currentTime);
          oscillator.stop(audioContext.currentTime + duration);
        }, delay);
      };
      
      // Secuencia de alerta: tres tonos ascendentes
      playTone(800, 0.2, 0);
      playTone(1000, 0.2, 300);
      playTone(1200, 0.3, 600);
      
      console.log('üîä Sonido de prueba reproducido');
      
      // Vibraci√≥n si est√° disponible
      if ('vibrate' in navigator) {
        navigator.vibrate([300, 100, 300, 100, 300]);
        console.log('üì≥ Vibraci√≥n activada');
      }
      
    } catch (error) {
      console.log('‚ùå Error reproduciendo sonido:', error.message);
    }
  };
  
  // Paso 6: Test de sonido inmediato
  console.log('üß™ Probando sonido...');
  window.playNotificationSound();
  
  // Paso 7: Configurar listener de eventos cr√≠ticos
  console.log('üëÇ Configurando listener de eventos...');
  
  function handleCriticalNotification(event) {
    const { type, message, data } = event.detail;
    console.log('üî• Notificaci√≥n cr√≠tica recibida:', type, message);
    
    // Sonido inmediato
    if (window.playNotificationSound) {
      window.playNotificationSound();
    }
    
    // Notificaci√≥n del navegador
    if (Notification.permission === 'granted') {
      const notification = new Notification('üî• ¬°Nuevo Pedido!', {
        body: message,
        icon: '/favicon.ico',
        badge: '/favicon.ico',
        tag: 'new-order'
      });
      
      notification.onclick = () => {
        window.focus();
        notification.close();
      };
      
      setTimeout(() => notification.close(), 10000);
    }
  }
  
  // Remover listener anterior si existe
  window.removeEventListener('criticalNotification', window.currentCriticalListener);
  
  // Agregar nuevo listener
  window.addEventListener('criticalNotification', handleCriticalNotification);
  window.currentCriticalListener = handleCriticalNotification;
  
  console.log('‚úÖ Listener de eventos configurado');
  
  // Paso 8: Funci√≥n de test completo
  window.testCompleteNotification = function() {
    console.log('üß™ Probando notificaci√≥n completa...');
    
    const event = new CustomEvent('criticalNotification', {
      detail: {
        type: 'new_order',
        message: 'Pedido de prueba #TEST-789 por $30.000',
        data: {
          orderId: 'test-789',
          amount: 30000,
          buyer: 'Cliente de Prueba',
          timestamp: new Date().toISOString()
        }
      }
    });
    
    window.dispatchEvent(event);
    console.log('‚úÖ Evento de prueba enviado');
  };
  
  console.log('üéØ === ACTIVACI√ìN COMPLETA ===');
  console.log('‚úÖ Notificaciones del navegador: ACTIVAS');
  console.log('‚úÖ Sistema de sonido: CONFIGURADO');
  console.log('‚úÖ Listener de eventos: ACTIVO');
  console.log('‚úÖ Vibraci√≥n: ' + ('vibrate' in navigator ? 'DISPONIBLE' : 'NO DISPONIBLE'));
  
  console.log('\\nüß™ COMANDOS DE PRUEBA:');
  console.log('- playNotificationSound() - Probar solo sonido');
  console.log('- testCompleteNotification() - Probar notificaci√≥n completa');
  
  return true;
}

// Ejecutar activaci√≥n autom√°ticamente
activateNotifications().then(success => {
  if (success) {
    console.log('\\nüéâ ¬°SISTEMA DE NOTIFICACIONES COMPLETAMENTE ACTIVO!');
    console.log('Ahora recibir√°s alertas inmediatas de nuevos pedidos.');
  } else {
    console.log('\\n‚ö†Ô∏è Revisa los pasos indicados para activar manualmente.');
  }
});
