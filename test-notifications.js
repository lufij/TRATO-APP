// üß™ SCRIPT DE PRUEBA - Verificar sistema de notificaciones completo
// Ejecutar en la consola del navegador en SellerDashboard

console.log('üß™ Iniciando prueba completa de notificaciones...');

// Test 1: Verificar componentes est√°n cargados
console.log('üîç Verificando componentes...');
console.log('CriticalNotifications listener activo:', !!window.addEventListener);

// Test 2: Verificar permisos del navegador
if ('Notification' in window) {
  console.log('üîî Permisos de notificaci√≥n:', Notification.permission);
  if (Notification.permission === 'default') {
    console.log('‚ö†Ô∏è Solicitando permisos...');
    Notification.requestPermission().then(permission => {
      console.log('‚úÖ Permisos actualizados:', permission);
    });
  }
} else {
  console.log('‚ùå Notificaciones no soportadas en este navegador');
}

// Test 3: Verificar Web Audio API
if ('AudioContext' in window || 'webkitAudioContext' in window) {
  console.log('üîä Web Audio API disponible');
} else {
  console.log('‚ùå Web Audio API no disponible');
}

// Test 4: Verificar vibraci√≥n (m√≥viles)
if ('vibrate' in navigator) {
  console.log('üì≥ API de vibraci√≥n disponible');
} else {
  console.log('‚ùå Vibraci√≥n no disponible');
}

// Test 5: Simular notificaci√≥n de nuevo pedido
console.log('üì± Simulando nuevo pedido en 3 segundos...');
setTimeout(() => {
  console.log('üöÄ Enviando evento de nuevo pedido...');
  
  const event = new CustomEvent('criticalNotification', {
    detail: {
      type: 'new_order',
      message: 'Pedido de prueba #12345 por $25.000',
      data: {
        orderId: 'test-12345',
        amount: 25000,
        buyer: 'Cliente Prueba',
        timestamp: new Date().toISOString()
      }
    }
  });
  
  window.dispatchEvent(event);
  console.log('‚úÖ Evento enviado. Deber√≠as ver/escuchar la notificaci√≥n ahora!');
}, 3000);

// Test 6: Verificar base de datos (si supabase est√° disponible)
if (typeof supabase !== 'undefined') {
  console.log('üóÑÔ∏è Verificando conexi√≥n a base de datos...');
  supabase.from('notifications').select('count', { count: 'exact', head: true })
    .then(({ data, error }) => {
      if (error) {
        console.log('‚ùå Error en tabla notifications:', error.message);
      } else {
        console.log('‚úÖ Tabla notifications: Accesible');
      }
    });
} else {
  console.log('‚ö†Ô∏è Supabase no disponible en consola');
}

console.log('üß™ Pruebas configuradas. Observa los logs y las notificaciones...');